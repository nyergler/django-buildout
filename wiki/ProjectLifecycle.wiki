#summary Managing a Django project with zc.buildout
#labels Featured,Phase-Implementation

= Introduction =

This page describes the life cycle of a Django project managed using zc.buildout.  

* This is preliminary documentation. *  I'm just starting to use this in practice so we
will undoubtedly discover that some initial assumptions don't hold or are just plain
incorrect.  Eventually it should be trivial to add zc.buildout to an existing Django
project.  

= Starting A Project =

To start a project, download the bootstrap-tarball from the Downloads section and
uncompress it.  This tarball contains the following files:

  * *bootstrap.py* A Python script which downloads zc.buildout and setuptools if they are
not available.
  * *buildout.cfg* A minimal buildout configuration.
  * *setup.py* A minimal setup.py which declares a dependencies of Django and setuptools.

After the tarball is expanded, run `bootstrap.py` with your choice of Python interpreter
(2.4 or newer).  The interpreter used to run `bootstrap.py` will be set as the default
interpreter for all scripts generated by the buildout process.

Running `bootstrap.py` creates (among other things) a `bin` subdirectory, which will then
contain a `buildout` script.  The `buildout` script can be run any time you update the
dependencies of your project to retrieve eggs.  Running `buildout` also checks for newer
versions of dependencies (including zc.buildout and setuptools) and downloads them if
possible.

= Declaring Dependencies =

= Testing and Development =

= Deployment =